name: Hourly Run Distribution of Returns and Streamlit Plots Display

on:
  push:
    branches:
      - main  # Runs on push to the main branch
  schedule:
    - cron: '0 * * * *'  # Runs every hour

jobs:
  run-python:
    runs-on: ubuntu-latest

    steps:
    - name: Free up disk space
      run: |
        echo "Checking disk space before cleanup..."
        df -h
        sudo apt-get clean
        sudo apt-get autoremove -y
        sudo rm -rf /usr/local/lib/android
        docker system prune -af
        sudo rm -rf /opt/hostedtoolcache
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/share/chromium
        sudo rm -rf /usr/local/share/powershell
        echo "Checking disk space after cleanup..."
        df -h

    - name: Check out repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies manually
      run: |
        pip install --no-cache-dir yfinance pandas numpy matplotlib seaborn scipy openpyxl selenium tzlocal

    - name: Run Python script
      run: python returns_main.py  # Replace with your actual Python script name

    - name: Configure Git user
      run: |
        git config --global user.name "krishanggupta"
        git config --global user.email "krishanggupta.kg@gmail.com"

    - name: Pull latest changes
      run: |
        git fetch origin main
        git pull --rebase origin main || echo "No changes to pull or rebase already up-to-date"

    - name: Check if Intraday_data_files_stats_and_plots_folder has files and commit changes
      run: |
        if [ -d "Intraday_data_files_stats_and_plots_folder" ] && [ "$(ls -A Intraday_data_files_stats_and_plots_folder)" ]; then
          echo "Files detected, committing changes..."
          git add .
          git commit -m "Automated update of Intraday_data_files_stats_and_plots_folder" || echo "No changes to commit"

          echo "Pulling again before pushing to avoid non-fast-forward error..."
          git pull --rebase origin main || echo "Rebase failed or not required"

          echo "Pushing changes..."
          git push origin main
        else
          echo "No new files detected, skipping commit"
        fi
